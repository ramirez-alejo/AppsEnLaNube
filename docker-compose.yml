version: "3.2"
services:
  rabbit:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    container_name: rabbit
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbit/
      - rabbitmq_log:/var/log/rabbit/
    restart: unless-stopped
    networks:
      - rabbitmq_go_net
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 3  

  app-drones:
    build: ./app-drones
    ports:
      - 6000:5000
    command: flask run --host=0.0.0.0
    environment:
      - RABBIT_HOST=rabbit
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - rabbit
      - app-file-storage
    networks:
      - rabbitmq_go_net
    volumes:
      - nfsshare:/nfsshare
    restart: on-failure

  app-drones-worker:
    build: ./app-drones-worker
    command: python app.py
    environment:
      - RABBIT_HOST=rabbit
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - rabbit
      - app-file-storage
    networks:
      - rabbitmq_go_net
    restart: on-failure
    volumes:
      - nfsshare:/nfsshare
  
  app-file-storage:
    image: itsthenetwork/nfs-server-alpine:12
    environment:
      SHARED_DIRECTORY: /nfsshare
    restart: unless-stopped
    volumes:
      - nfsshare:/nfsshare
    networks:
      - rabbitmq_go_net
    privileged: true
    ports:
      - "2049:2049"

volumes:
  nfsshare:
  rabbitmq_data:
  rabbitmq_log:
  postgres_data:
  app-drones:
    driver: nfs
    driver_opts:
      share: app-file-storage:/nfsshare

networks:
  rabbitmq_go_net:
    driver: bridge
